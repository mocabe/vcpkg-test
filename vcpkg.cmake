# bootstrap vcpkg (internal)
function(_bootstrap_vcpkg)
  message(STATUS "bootstraping vcpkg")
  if(WIN32)
    execute_process(COMMAND ${VCPKG_SOURCE_DIR}/bootstrap-vcpkg.bat)
  else()
    execute_process(COMMAND ${VCPKG_SOURCE_DIR}/bootstrap-vcpkg.sh)
  endif()
endfunction()

# configure vcpkg
function(vcpkg_configure)
  find_program(VCPKG_EXECUTABLE vcpkg PATHS ${VCPKG_SOURCE_DIR})
  if(NOT VCPKG_EXECUTABLE)
    _bootstrap_vcpkg()
  endif()
  find_program(VCPKG_EXECUTABLE vcpkg PATHS ${VCPKG_SOURCE_DIR} REQUIRED)
  set(CMAKE_TOOLCHAIN_FILE ${VCPKG_SOURCE_DIR}/scripts/buildsystems/vcpkg.cmake CACHE STRING "")
  message(STATUS "configured vcpkg toolchain")
endfunction()